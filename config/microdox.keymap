/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

/*
&mt {
    flavor = "tap-preferred";
    tapping-term-ms = <300>;
}
*/




/ {
        behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <250>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };

        keymap {
                compatible = "zmk,keymap";

                default_layer {
// -----------------------------------------------------------------------------------------
// |  Q  |  W  |  F  |  P  |  b   |   |  J  |  L   |  U  |  Y  |  ;  |
// |  A  |  R  |  S  |  T  |  G   |   |  M  |  N   |  E  |  I  |  O  |
// |  Z  |  X  |  C  |  D  |  V   |   |  K  |  H   |  ,  |  .  |  /  |
//             | QRTY | NUM | SPC |   | ENTER | NAV | ALT |
                        bindings = <
   &kp Q &kp W &kp F &kp P &kp B   &kp J &kp L  &kp U     &kp Y   &kp SEMI
   &kp A &hm LALT R &hm LCTRL S &hm LSHIFT T &kp G   &kp M &hm LSHIFT N  &hm LCTRL E  &hm LALT I   &kp O
   &kp Z &kp X &kp C &kp D &kp V   &kp K &kp H  &kp COMMA &kp DOT &kp FSLH
          &tog 3 &mo 2 &kp SPACE &kp RET &mo 1 &kp RALT
                        >;
                };
                nav_layer {
// -----------------------------------------------------------------------------------------
// | WIN  |  DEL  | RGT |  UP   | LEFT  |     |      |       |       |     |      |
// | HOME |       |     |       | TAB   |     |  /   |  DOWN |   END |     |      |
// |      |       |     | PG_UP | PG_DN |     |  \   | BSPC  |   K/E |     |      |
//                |     |       |       |     |      |       |       |
                        bindings = <
   &kp LEFT_WIN  &kp DEL     &kp RIGHT  &kp UP       &kp LEFT     &trans   &trans    &trans   &trans    &trans
   &kp HOME      &trans      &trans     &trans      &kp TAB       &kp FSLH &kp DOWN  &kp END  &trans    &trans
   &bt BT_CLR        &bt BT_NXT      &kp PG_UP  &kp PG_DN    &trans       &kp BSLH &kp BSPC  &kp LANG_HANGEUL   &trans    &trans
                            &trans   &trans    &trans     &trans   &trans   &trans
                        >;
                };

                num_sym_layer {
// -----------------------------------------------------------------------------------------
// |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  10  |
// |  _  |  -  |  (  |  )  |  #  |   |  %  |  =  |  +  |  *  |  "|" |
// |  ~  |  !  |  [  |  ]  |  ^  |   |  &  |  {  |  }  |  $  |   @  |
//             |     |     |     |   |     |     |     |
                        bindings = <
   &kp KP_N1  &kp KP_N2  &kp KP_N3  &kp KP_N4   &kp KP_N5   &kp KP_N6 &kp KP_N7  &kp KP_N8 &kp KP_N9 &kp KP_N0
   &kp UNDER  &kp MINUS  &kp LPAR   &kp RPAR    &kp HASH    &kp PRCNT &kp EQUAL  &kp PLUS  &kp ASTRK &kp PIPE
   &kp TILDE  &kp EXCL   &kp LBKT   &kp RBKT    &kp CARET   &kp AMPS  &kp LBRC   &kp RBRC  &kp DLLR  &kp AT
                       &trans  &trans    &trans   &trans   &trans    &trans
                        >;
                };

// This layer is unreachable until "tri layer state" is sorted out.
// Leaving it here for completeness.
                querty_layer {
// -----------------------------------------------------------------------------------------
// |  Q  |  W  |  E  |  R  |  T   |   |  Y  |  U   |  I  |  O  |  P  |
// |  A  |  S  |  D  |  F  |  G   |   |  H  |  J   |  K  |  L  |  ;  |
// |  Z  |  X  |  C  |  V  |  B   |   |  N  |  M   |  ,  |  .  |  /  |
//             | GUI | NAV | SHFT |   | SPC | SYM  | ALT |
                        bindings = <
   &kp Q &kp W &kp E &kp R &kp T   &kp Y &kp U  &kp I     &kp O   &kp P
   &kp A &hm LALT S &hm LCTRL D &hm LSHIFT F &kp G   &kp H &hm LSHIFT J  &hm LCTRL K  &hm LALT L   &kp SEMI
   &kp Z &kp X &kp C &kp V &kp B   &kp N &kp M  &kp COMMA &kp DOT &kp FSLH
          &trans &trans &trans &trans  &trans &trans
                        >;
                };
        };
};
